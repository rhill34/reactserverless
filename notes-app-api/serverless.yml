# Here we are adding our newly added create funcCon to the configuraCon.
# We specify that it handles requests at the endpoint. This
# pattern of using a single Lambda funcCon to respond to a single HTTP
# event is very much like the Microservices architecture
# (https://en.wikipedia.org/wiki/Microservices). We discuss this and a few
# other patterns in the chapter on organizing Serverless Framework projects
# (/chapters/organizing-serverless-projects.html). We set CORS support to
# true. This is because our frontend is going to be served from a different domains

# NOTE: update this with your service name
service: notes-app-api

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: us-west-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #

  environment:
    tableName: notes

  iamRoleStatements:
    -Effects: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
  Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  # Defines an HTTP API endpoint that calls the main function in create.js
  # - path: url path is /notes
  # - method: POST request
  # - cors: enabled CORS (Cross-Origin Resource Sharing) for browser cross
  # domain api call
  # - authorizer: authenticate using the AWS IAM role
  create:
    handler: create.main
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /notes/{id}
    # - method: GET request
    events:
      - http:
        path: notes/{id}
        method: get
        cors: true
        authorizer: aws_iam
  list:
    handler: list.main
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /notes/
    # - method: GET request
    events:
      - http:
          path: notes
          method: get
          cors: true
          authorizer: aws_iam
